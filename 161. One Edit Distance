class Solution:
    def isOneEditDistance(self, s: str, t: str) -> bool:
        m, n = len(s), len(t)
        
        # More than one edit
        if abs(m-n) > 1:
            return False
        
        # Insert is a reverse of delete
        if m < n:
            m, n, s, t = n, m, t, s
        # For Replace
        if m == n:
            count = 0
            for ch_s, ch_t in zip(s, t):
                if ch_s != ch_t:
                    count += 1
                if count > 1:
                    return False
            if count == 1:
                return True
            else:
                return False
        
        # For Insert or Delete
        for i in range(n):
            if s[i] != t[i]:
                if s[:i] + s[i+1:] == t:
                    return True
        if s[:-1] == t: 
            return True
        else:
            return False
