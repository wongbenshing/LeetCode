class Solution:
    def findMedianSortedArrays(self, nums1: 'List[int]', nums2: 'List[int]') -> 'float':
        if not nums1 and not nums2:
            return 0.0
        
        m, n = len(nums1), len(nums2)
        if m > n:
            nums1, nums2, m, n = nums2, nums1, n, m
        
        l, r, mid_index = 0, m, (m+n+1) // 2
        while l <= r:
            i = (l+r) // 2
            j = mid_index - i
            
            if i < m and nums2[j-1] > nums1[i]:
                l = i + 1
            elif i > 0 and nums1[i-1] > nums2[j]:
                r = i - 1
            else:
                if i == 0:
                    max_left = nums2[j-1]
                elif j == 0:
                    max_left = nums1[i-1]
                else:
                    max_left = max(nums1[i-1], nums2[j-1])
                
                if (m+n) % 2 == 1:
                    return max_left
                
                if i == m:
                    min_right = nums2[j]
                elif j == n:
                    min_right = nums1[i]
                else:
                    min_right = min(nums1[i], nums2[j])
                
                return (max_left + min_right) / 2
