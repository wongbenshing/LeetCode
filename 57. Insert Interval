# Definition for an interval.
# class Interval:
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution:
    def insert(self, intervals, newInterval):
        # Empty Situation
        if not intervals: 
            return [newInterval]
        
        ans = []
        i = 0
        n = len(intervals)
        
        while i<n:
            if newInterval.start > intervals[i].end:
                ans.append(intervals[i])
                i += 1
            else:
                break
        
        if i >= n:
            ans.append(newInterval)
            return ans
        
        newStart = min(newInterval.start, intervals[i].start)
        newEnd = newInterval.end
            
        while i < n:
            if newEnd >= intervals[i].end:
                i += 1
            elif newEnd < intervals[i].start:
                break
            else:
                newEnd = intervals[i].end
                i += 1
        
        ans.append(Interval(s = newStart, e = newEnd))
        ans = ans + intervals[i:n]
        return ans
        """
        :type intervals: List[Interval]
        :type newInterval: Interval
        :rtype: List[Interval]
        """
        
